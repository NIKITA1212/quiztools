[{'choices': [[u'wrong',
               u'No, not if the program is correct. Computers are perfect calculators.',
               u'No, computations with real numbers are done with finite precision\narithmetics and may result in round-off errors.'],
              [u'wrong',
               u'Yes, but only for very small computers like smart phones and tablets.',
               u'There is no essential difference between the accuracy of calculations\non different types of computers.'],
              [u'right',
               u'Yes, because computers have limited storage, numbers get truncated.'],
              [u'wrong',
               u'No, not if you have enough memory to hold your numbers.',
               u'The size of the computer memory has nothing to do with the accuracy\nof calculations. However, if you have enough memory, you may represent\nnumbers by the <code>decimal.Decimal</code> object where you can choose how many\ndigits a floating-point number has and thereby get more accurate\ncalculations.']],
  'keywords': ['finite-precision arithmetics'],
  'no': 1,
  'question': u'Can mathematical calculations in computers be inaccurate?'},
 {'choices': [[u'right',
               u'<code>_var</code>',
               u'Variable names can start with letters or underscore <code>_</code>.'],
              [u'wrong',
               u'<code>1var</code>',
               u'Variable names cannot start with numbers.'],
              [u'wrong',
               u'<code>&top</code>',
               u'Variable names cannot contain other symboles than numbers, letters, and underscore.'],
              [u'wrong',
               u'<code>and</code>',
               u'<code>and</code> is a reserved word in Python and cannot be used as variable (if you still want <code>and</code> as variable name, it is a common practice to add an underscore: <code>and_</code>).']],
  'keywords': ['variable names'],
  'no': 2,
  'question': u'Which Python variable name is correct?'},
 {'choices': [[u'wrong',
               u'The program will crash, because Python detects that the conversion formula from Celsius to Fahrenheit degrees is wrong.',
               u'No programming language will check the correctness of a formula - only the programmer has enough information to do this!'],
              [u'wrong',
               u'The program will run perfectly, but nothing is printed on the screen.',
               u'The program will crash, because of the misspelling in <code>Celcius_degrees</code>, the c was an <code>s</code> instead of <code>c</code> when this variable was defined!'],
              [u'right',
               u'The program will crash, because <code>Celcius_degrees</code> is an undefined name.',
               u'Correct!'],
              [u'wrong',
               u'The program will not do anything, because a print statement is missing at the end.',
               u'Python does not expect a print statement in programs - it is allowed to do a lot and not write out anything from a program. Here we do a lot, in fact we\ndefine a variable, compute an addition, and define a new variable. Unfortunately, the addition involves an undefined name, so the program will crash.']],
  'keywords': ['undefined variables'],
  'no': 3,
  'question': u'What will happen when we run the following program:\n\n<p>\n\n<!-- code=python (!bc pycod) typeset with pygments style "default" -->\n<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%">Celsius_degrees <span style="color: #666666">=</span> <span style="color: #666666">22</span>\nFahrenheit_degrees <span style="color: #666666">=</span> <span style="color: #666666">9.0/5*</span>Celcius_degrees <span style="color: #666666">+</span> <span style="color: #666666">42</span>\n</pre></div>\n<p>'},
 {'choices': [[u'wrong',
               u'No, because output text in Norwegian is not allowed in Python.',
               u'The problem is not Norwegian text as such, but special Norwegian characters that are not in the English alphabet. There are no such characters here. However, the quotes are not compatible, and that results in a problem.'],
              [u'wrong',
               u'No, because <code>verden</code> should be typeset with capital <code>V</code>.',
               u'First, Python does not interpret any text in a string variable and can\ncertainly not interpret Norwegian. Second, one would normally not capitalize <code>v</code>\nin Norwegian as one does with <code>World</code> in <code>Hello, World!</code> in English.'],
              [u'right',
               u'No, there will be a syntax error.',
               u'Because the quotes surrounding the string are of different type, Python does not find the end of the output string (Python expects double quotes) and issues an error message.'],
              [u'wrong',
               u'Yes, because one can freely choose between single or double quotes.',
               u'Strings can be enclosed in single or double quotes, but the opening and closing quotes must be of the same type!']],
  'keywords': ['quotes, strings, Norwegian'],
  'no': 4,
  'question': u'Will the following program work?\n\n<p>\n\n<!-- code=python (!bc pycod) typeset with pygments style "default" -->\n<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span style="color: #008000; font-weight: bold">print</span> <span style="color: #BA2121">&quot;Hei, verden!&#39;</span>\n</pre></div>\n<p>'},
 {'choices': [[u'wrong',
               u'<p>\n\n<!-- code=python (!bc pypro) typeset with pygments style "default" -->\n<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span style="color: #008000; font-weight: bold">import</span> <span style="color: #0000FF; font-weight: bold">math</span>\n<span style="color: #008000; font-weight: bold">print</span> exp(<span style="color: #666666">-</span>a<span style="color: #666666">*</span>t)<span style="color: #666666">*</span>cos(w<span style="color: #666666">*</span>t)\n</pre></div>\n<p>',
               u'This program will result in error messages: <code>exp</code> and <code>cos</code> are unknown function names, and <code>a</code>, <code>t</code>, and <code>w</code>\nare not defined variables.'],
              [u'wrong',
               u'<p>\n\n<!-- code=python (!bc pypro) typeset with pygments style "default" -->\n<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span style="color: #008000; font-weight: bold">from</span> <span style="color: #0000FF; font-weight: bold">math</span> <span style="color: #008000; font-weight: bold">import</span> cos, e\nw <span style="color: #666666">=</span> <span style="color: #666666">2*</span>pi; t <span style="color: #666666">=</span> <span style="color: #666666">0.6</span>\n<span style="color: #008000; font-weight: bold">print</span> e(<span style="color: #666666">-</span>a<span style="color: #666666">*</span>t)<span style="color: #666666">*</span>cos(w<span style="color: #666666">*</span>t)\n</pre></div>\n<p>',
               u"There are several problems:\n1) <code>pi</code> is not defined (not imported from <code>math</code>);\n2) <code>e(-a*t)</code> means that <code>e</code> is a function, but it is not - it is\nimported as a number (Euler's number);\n3) <code>a</code> is not defined."],
              [u'right',
               u'<p>\n\n<!-- code=python (!bc pypro) typeset with pygments style "default" -->\n<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span style="color: #008000; font-weight: bold">from</span> <span style="color: #0000FF; font-weight: bold">math</span> <span style="color: #008000; font-weight: bold">import</span> exp, cos, pi\na, t, w <span style="color: #666666">=</span> <span style="color: #666666">0.1</span>, <span style="color: #666666">0.6</span>, <span style="color: #666666">2*</span>pi\n<span style="color: #008000; font-weight: bold">print</span> exp(<span style="color: #666666">-</span>a<span style="color: #666666">*</span>t)<span style="color: #666666">*</span>cos(w<span style="color: #666666">*</span>t)\n</pre></div>\n<p>',
               u'This program defines all variables before the expression is evaluated.'],
              [u'wrong',
               u'<p>\n\n<!-- code=python (!bc pypro) typeset with pygments style "default" -->\n<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span style="color: #008000; font-weight: bold">from</span> <span style="color: #0000FF; font-weight: bold">math</span> <span style="color: #008000; font-weight: bold">import</span> exp, cos\na, t, w <span style="color: #666666">=</span> <span style="color: #666666">0.1</span>, <span style="color: #666666">0.6</span>\n<span style="color: #008000; font-weight: bold">print</span> exp(<span style="color: #666666">-</span>a<span style="color: #666666">*</span>t)<span style="color: #666666">*</span>cos(w<span style="color: #666666">*</span>t)\n</pre></div>\n<p>',
               u'One cannot assign 2-tuple <code>0.1, 0.6</code> to the individual\nvariables in a 3-tuple <code>a, t, w</code>, so the second line results in an\nerror message.']],
  'keywords': ['import', 'undefined names'],
  'no': 5,
  'question': u'Which of the complete\nprograms below will correctly evaluate the formula \\( e^{-at}\\cos (wt) \\)?'}]