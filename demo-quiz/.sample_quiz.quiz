[{'choices': [[u'wrong', u'Helsinki'],
              [u'wrong', u'Drammen'],
              [u'right', u'Oslo'],
              [u'wrong', u'Denmark']],
  'no': 1,
  'question': u'What is the capital of Norway?'},
 {'choices': [[u'wrong', u'Sidney'],
              [u'right', u'Kigali'],
              [u'wrong', u'Bonn'],
              [u'right', u'Bern'],
              [u'right', u'Ottawa'],
              [u'wrong', u'New York']],
  'no': 2,
  'question': u'Which of the following cities are capitals?'},
 {'choices': [[u'wrong',
               u'Helsinki',
               u'Helsinki is the capital of Finland.'],
              [u'wrong',
               u'Drammen',
               u'Drammen is a small city close to Oslo.'],
              [u'right', u'Oslo'],
              [u'wrong', u'Denmark']],
  'no': 3,
  'question': u'What is the capital of Norway?'},
 {'choices': [[u'wrong', u'Geroge W. Bush'],
              [u'right',
               u'Donald Knuth',
               u'According to <a href="http://en.wikiquote.org/wiki/Donald_Knuth" target="_self">Wikiquote</a>,\nDonald Knuth wrote this statement in <em>Structured Programming with\nGoto Statements</em>. Computing Surveys, <b>6</b>:4,\npp. 261-301, <b>1974</b>.'],
              [u'wrong',
               u'Ole-Johan Dahl',
               u'Ole-Johan Dahl was a famous Norwegian professor of computer\nscience and together with Kristen Nygaard the inventor of\nobject-oriented programming, but he is not the man behind this\nquote.']],
  'no': 4,
  'question': u'This is a very famous quote:\n\n<p>\n<blockquote>\n    <em>Premature optimization is the root of all evil.</em>\n</blockquote>\n\nThis quote is attributed to'},
 {'choice prefix': [u'Answer:', None, None, None],
  'choices': [[u'wrong',
               u'Stockholm',
               u"Stockholm is the capital of Sweden, Norway's neighboring country."],
              [u'wrong',
               u'Bergen',
               u'Some people from Bergen may claim so... It is just the second\nlargest city in Norway.'],
              [u'right', u'Oslo'],
              [u'wrong', u'Denmark']],
  'no': 5,
  'question': u'What is the capital of Norway?',
  'question prefix': u''},
 {'choices': [[u'wrong',
               u'5.',
               u'Good attempt, especially when referring to the following story.\n\n<p>\n<blockquote>\n    An anthropologist was asking a primitive tribesman about arithmetic.\n    When the anthropologist asked, <em>What does two and two make?</em> the\n    tribesman replied, <em>Five.</em> Asked to explain, the tribesman said, <em>If I\n    have a rope with two knots, and another rope with two knots, and I\n    join the ropes together, then I have five knots.</em>\n</blockquote>'],
              [u'right',
               u'4.',
               u'Seems trivial, but once upon a time...\n\n<p>\n<center><p><img src="fig/1p1.gif" align="bottom" width=140></p></center>'],
              [u'wrong',
               u'The computation does not make sense when \\( a \\) and \\( b \\) are given without\nunits.',
               u'It is indeed possible to add pure numbers without any units.']],
  'no': 6,
  'question': u'Compute the result of \\( a+b \\) in the case \\( a=2 \\) and \\( b=2 \\).'},
 {'choices': [[u'wrong',
               u'The equation tells that the net outflow of something with\nvelocity \\( \\boldsymbol{u} \\) in region is zero.',
               u"This is right: integrating \\eqref{cont:eq} over an arbitrary domain\n\\( \\Omega \\) and using Gauss' divergence theorem, we get the surface integral\n\n$$ \\int_{\\partial\\Omega}\\boldsymbol{u}\\cdot\\boldsymbol{n}dS=0,$$\n\nwhere \\( \\boldsymbol{n} \\) is an outward unit normal on the boundary \\( \\partial\\Omega \\).\nThe quantity \\( \\boldsymbol{u}\\cdot\\boldsymbol{n}dS \\) is the outflow of volume per\ntime unit if \\( \\boldsymbol{u} \\) is velocity."],
              [u'wrong',
               u'The equation tells that the vector field \\( \\boldsymbol{u} \\) is divergence free.',
               u'Yes, <em>divergence free</em> is often used as synonym for <em>zero divergence</em>,\nand \\( \\nabla\\cdot\\boldsymbol{u} \\) is the divergence of a vector field \\( \\boldsymbol{u} \\).'],
              [u'wrong',
               u'The equation implies that there exists a vector potential \\( \\boldsymbol{A} \\)\nsuch that \\( \\boldsymbol{u}=\\nabla\\times\\boldsymbol{A} \\).',
               u'Yes, this is an important result in vector calculus that is much\nused in electromagnetics.'],
              [u'right',
               u'The equation implies \\( \\nabla\\times\\boldsymbol{u}=0 \\).',
               u'No, only if \\( \\boldsymbol{u}=\\nabla\\phi \\), for some scalar potential \\( \\phi \\),\nwe have \\( \\nabla\\times\\boldsymbol{u}=0 \\).'],
              [u'right',
               u'The equation implies that \\( \\boldsymbol{u} \\) must be a constant vector field.',
               u'No, it is the <em>sum</em> of derivatives of different components of \\( \\boldsymbol{u} \\)\nthat is zero. Only in one dimension, where \\( \\boldsymbol{u}=u_x\\boldsymbol{i} \\)\nand consequently \\( \\nabla\\cdot\\boldsymbol{u}=du/dx \\), the vector field must be constant.']],
  'keywords': ['gradient', 'divergence', 'curl', 'vector calculus'],
  'no': 7,
  'question': u'The equation\n\n$$\n\\begin{equation}\n\\nabla\\cdot\\boldsymbol{u} = 0\n\\label{cont:eq}\n\\end{equation}\n$$\n\nis famous in physics. Select the wrong assertion(s):'},
 {'choices': [[u'wrong',
               u'Yes.',
               u'Not exactly: <code>numpy.zeros</code> creates an array of zeros, not a list.'],
              [u'wrong',
               u'Yes, provided we write <code>np</code> instead of <code>numpy</code>:\n\n<p>\n\n<!-- code=python (!bc pycod) typeset with pygments style "default" -->\n<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span style="color: #008000; font-weight: bold">import</span> <span style="color: #0000FF; font-weight: bold">numpy</span> <span style="color: #008000; font-weight: bold">as</span> <span style="color: #0000FF; font-weight: bold">np</span>\nmylist <span style="color: #666666">=</span> np<span style="color: #666666">.</span>zeros(n)\n</pre></div>\n<p>',
               u'No, this is fully equivalent to the original code, so <code>mylist</code> becomes\nan array, not a list.'],
              [u'right',
               u'No.',
               u'One would need to do <code>mylist = [0]*n</code> or <code>numpy.zeros(n).tolist()</code>.']],
  'no': 8,
  'question': u'We want to create a Python list object of length <code>n</code> where each\nelement is <code>0</code>. Is the following code then what we need?\n\n<p>\n\n<!-- code=python (!bc pycod) typeset with pygments style "default" -->\n<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span style="color: #008000; font-weight: bold">import</span> <span style="color: #0000FF; font-weight: bold">numpy</span>\nmylist <span style="color: #666666">=</span> numpy<span style="color: #666666">.</span>zeros(n)\n</pre></div>\n<p>'},
 {'choices': [[u'wrong',
               u'In Python, the syntax for \\( t^2 \\) is <code>t**2</code>, not <code>t^2</code>, so the\n<code>u</code> function contains an error.',
               u'True. However, <code>t^2</code> will work for integer <code>t</code> in Python, but the computation is nonsense in this case since \\( u(t) \\) is supposed to be \\( t^2 \\).'],
              [u'wrong',
               u'The string in the <code>u</code> function is a valid doc string.',
               u'Yes, a doc string can be any string after the function heading. It can\nhave single quotes <code>\'...\'</code>, double quotes <code>"..."</code>,\ntriple single quotes <code>\'\'\'...\'\'\'</code>, or triple double quotes <code>"""..."""</code>.\nThe latter is the most popular for doc strings. Recall that triple quotes\nallow the string to span multiple lines.'],
              [u'wrong',
               u'The output from the program is on a single line, despite two <code>print</code>\nstatements.',
               u'Yes, because of the comma after the first <code>print</code> statement: it suppresses\nthe newline character that is normally appended to <code>print</code> statements in\nPython.'],
              [u'right',
               u'One cannot use <code>u</code> both inside the <code>D</code> function and in the\nouter calling code (the main program).',
               u"Yes, you can, because the <code>u</code> argument in the <code>D</code> function\n(holding a function)\nis a <em>local</em> variable inside the <code>D</code> function. The <code>u</code> in the calling\ncode is <em>global</em> variable, holding a function object.\nInside <code>D</code>, <code>u</code> refers to the\nlocal variable, while in the main program, <code>u</code> refers to the\nglobal variable, and the local variable <code>u</code> in <code>D</code> no longer exists, because\nit was deleted when returning from the function.\nInside <code>D</code>, we can actually access the global <code>u</code> by <code>globals()['u']</code>,\nbut that almost never comes to use and is also bad coding."],
              [u'wrong',
               u'The call <code>D(lambda x: return 2*x, 2)</code> is equivalent to defining\n\n<p>\n\n<!-- code=python (!bc pycod) typeset with pygments style "default" -->\n<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">f</span>(x):\n    <span style="color: #008000; font-weight: bold">return</span> <span style="color: #666666">2*</span>x\n</pre></div>\n<p>\nand then calling <code>D(f, 2)</code>.',
               u'<code>f(x)</code> is defined as a lambda function, which is a short-hand for\ndefining functions as an expression, in a function call as here, or\nin the right-hand side of an assignment, e.g.,\n\n<p>\n\n<!-- code=python (!bc pycod) typeset with pygments style "default" -->\n<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%">f <span style="color: #666666">=</span> <span style="color: #008000; font-weight: bold">lambda</span> x: <span style="color: #008000; font-weight: bold">return</span> <span style="color: #666666">2*</span>x\n</pre></div>\n<p>'],
              [u'wrong',
               u'There is danger of integer division in the <code>D</code> function.',
               u'True, here is an example: <code>D(lambda t: t, dt=1)</code>. We get\n<code>(t+1 - t-1)/(2*1)</code>, which for any integer <code>t</code> gives <code>int/int</code>\nand hence integer division.'],
              [u'wrong',
               u'The <code>D</code> function computes an approximate derivative of the\nfunction <code>u(t)</code>.',
               u'Yes, <code>D</code> applies a widely used finite difference approximation\nformula to the derivative.'],
              [u'wrong',
               u'Both calls to <code>D</code> results in the exact derivative, provided we\nreplace <code>t^2</code> by <code>t**2</code>.',
               u'Yes, the finite difference approximation used in <code>D</code> is exact\nfor quadratic polynomials!']],
  'no': 9,
  'question': u'<p>\n\n<!-- code=python (!bc pypro) typeset with pygments style "default" -->\n<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span style="color: #008000; font-weight: bold">from</span> <span style="color: #0000FF; font-weight: bold">math</span> <span style="color: #008000; font-weight: bold">import</span> sin\n\n<span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">D</span>(u, t, dt<span style="color: #666666">=1E-5</span>):\n    <span style="color: #008000; font-weight: bold">return</span> (u(t <span style="color: #666666">+</span> dt) <span style="color: #666666">-</span> u(t <span style="color: #666666">-</span> dt))<span style="color: #666666">/</span>(<span style="color: #666666">2*</span>dt)\n\n<span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">u</span>(t):\n    <span style="color: #BA2121">&quot;A quadratic function.&quot;</span>\n    <span style="color: #008000; font-weight: bold">return</span> t<span style="color: #666666">^2</span>\n\n<span style="color: #008000; font-weight: bold">print</span> D(u, t<span style="color: #666666">=4</span>),\n<span style="color: #008000; font-weight: bold">print</span> D(<span style="color: #008000; font-weight: bold">lambda</span> x: <span style="color: #008000; font-weight: bold">return</span> <span style="color: #666666">2*</span>x, <span style="color: #666666">2</span>)\n</pre></div>\n<p>\nThe purpose of this program is to differentiate the two mathematical\nfunctions\n\n$$\n\\begin{align*}\nu(t) &= t^2,\\\\\nf(x) &= 2x.\n\\end{align*}\n$$\n\nDetermine which of the following assertions that is <b>wrong</b>.'}]